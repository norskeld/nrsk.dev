---
import { withSeoOptions, Common } from '@/config'

import { getArticles, getProjects, getZealArticles } from '@/api/content'
import { stripSuffix } from '@/api/utils'

import Layout from '@/layouts/Index.astro'

import ArticleList from '@/components/ArticleList.astro'
import Description from '@/components/Description.astro'
import Heading from '@/components/Heading.astro'
import Link from '@/components/Link.astro'

const canonical = Astro.url.href
const ogImage = `${stripSuffix(canonical, '/')}/index.og.png`

const props = withSeoOptions({
  canonical,
  openGraph: {
    basic: {
      image: ogImage,
    },
    image: {
      url: ogImage,
      secureUrl: ogImage,
      alt: Common.title,
    },
  }
})

const articles = await getArticles({ sort: 'desc' })
const zealArticles = await getZealArticles({ sort: 'desc' })
const projects = await getProjects()

// Links.
const email = `mailto:${Common.email}`
const bandcamp = `https://hypnosense.bandcamp.com`
const spotify = `https://open.spotify.com/artist/1EqX9erOVQHCVlAwGihPS2?si=U6WzSwm0RSCnS70g_sVZXQ`
const resty = `https://resty.cc`
---

<Layout {...props}>
  <!-- Introduction. -->
  <section class="flex flex-col gap-4">
    <Heading level={2}>Hello!</Heading>

    <Description>
      I'm a software engineer building polished products and web experiences using modern tech
      stack. My expertise ranges from working independently to leading teams towards project
      success as a tech/team lead.
    </Description>

    <Description>
      I'm also a Rust, TypeScript, and functional programming aficionado fascinated by design of
      compilers and programming languages. Sometimes I write music, mostly drone-ambient, which
      is available for free on my <Link to={bandcamp} external>Bandcamp</Link> and
      <Link to={spotify} external>Spotify</Link>.
    </Description>

    <hr
      class:list={[
        "my-2 w-1/12",
        "border-t-2 border-gray-200 dark:border-gray-800"
      ]}
    />

    <Description class="prose dark:prose-invert">
      I'm currently the founding engineer at <strong>Resty</strong> on the mission to build the best
      payment solution for restaurants and visitors.
    </Description>

    <Description>
      You can reach me via <Link to={email}>email</Link>.
    </Description>
  </section>

  <!-- Zeal devlog. -->
  {zealArticles.length > 0 && (
    <section id="zeal" class="flex flex-col gap-4">
      <Heading level={2}>Zeal Devlog</Heading>

      <Description class="prose dark:prose-invert mb-2">
        The development log for <strong>Zeal</strong> â€”
        a statically-typed programming language, embracing a single ownership model.
      </Description>

      <ArticleList items={zealArticles} />
    </section>
  )}

  <!-- Articles. -->
  {articles.length > 0 && (
    <section id="articles" class="flex flex-col gap-4">
      <Heading level={2}>Articles</Heading>

      <Description class="mb-2">
        I occasionally write about Rust, TypeScript, functional programming, and other stuff.
      </Description>

      <ArticleList items={articles} />
    </section>
  )}

  <!-- Projects. -->
  <section class="flex flex-col gap-4">
    <Heading level={2}>Projects</Heading>

    <Description>
      Some of my OSS projects.
    </Description>

    <ul
      class:list={[
        "grid gap-4 w-full max-w-[100vw]",
        "grid-cols-1 sm:grid-cols-2 md:grid-cols-3",
        "[grid-auto-rows:minmax(0,auto)] sm:[grid-auto-rows:minmax(10rem,auto)]"
      ]}
    >
      {projects.map((project) => (
        <li
          class:list={[
            "group/card",
            "flex flex-col gap-2 p-4 rounded-lg transition-all ease-in-out duration-200",
            "bg-gray-100/50 dark:bg-gray-400/5",
            "hover:bg-gray-50 dark:hover:bg-gray-400/10",
            "hover:shadow-neon hover:scale-[1.02]"
          ]}
        >
          <Link
            to={project.data.url}
            class:list={[
              "group/title inline-flex w-min",
              "!font-medium"
            ]}
            underline={false}
            external
          >
            <span class="inline">{project.data.name}</span>
            <span
              class:list={[
                "inline select-none transition-colors",
                "text-gray-500 dark:text-gray-400",
                "group-hover/title:text-crayola-500 dark:group-hover/title:text-crayola-300"
              ]}
            >
              {project.data.language.ext}
            </span>
          </Link>

          <div
            class:list={[
              "cursor-default transition-colors",
              "text-gray-500 dark:text-gray-400",
              "group-hover/card:text-gray-700 dark:group-hover/card:text-gray-300"
            ]}
            set:html={project.data.description}
          />
        </li>
      ))}
    </ul>

    <p class="text-gray-800 dark:text-gray-300">
      <Link to="https://github.com/norskeld" external underline={false}>
        See all projects &srarr;
      </Link>
    </p>
  </section>
</Layout>
