---
import { tw } from '@nrsk/tw'

export interface Props {
  content: string
  class?: string
}

const { content, class: className } = Astro.props

const proseClasses = tw`
  prose prose-vm dark:prose-invert
  w-full max-w-none
`
---

<section set:html={content} class:list={[proseClasses, className]} />

<style>
  /** Horizontal divider. */

  .prose :global(hr) {
    @apply block w-3/4 mt-8 mx-auto border border-solid border-gray-200;
  }

  /** Links. */

  .prose :global(a:focus),
  .prose :global(a:hover) {
    @apply no-underline;
  }

  /** Headers. */

  .prose :global(:is(h1, h2, h3, h4, h5, h6):focus-visible) {
    @apply outline-none;
  }

  /** -- Headers & anchor links re-styling. */

  .prose :global(h1),
  .prose :global(h2) {
    @apply pb-2 border-b-2 border-gray-200/75;
  }

  :global(.dark .prose :is(h1, h2)) {
    @apply border-gray-600/40;
  }

  .prose :global(h1:first-of-type) {
    @apply border-none;
  }

  .prose :global(.header-anchor) {
    @apply border-none no-underline text-gray-300 opacity-100 transition-[color,opacity];
  }

  .prose :global(.header-anchor:is(:hover, :focus)) {
    @apply text-current opacity-100;
  }

  @media screen and (min-width: 768px) {
    .prose :global(.header-anchor) {
      @apply opacity-0;
    }

    .prose :global(:is(h1, h2, h3, h4, h5, h5):hover .header-anchor) {
      @apply opacity-100;
    }
  }

  /** Blockquotes. */

  .prose :global(blockquote) {
    @apply font-normal border-l-gray-500/25;
  }

  :global(.dark .prose blockquote) {
    @apply border-l-gray-400/50;
  }

  /** Code highlighting. */

  /** -- General. */

  .prose :global(.shiki) {
    @apply rounded-none sm:rounded-lg -mx-8 sm:mx-0 my-4 sm:my-6 p-0;
  }

  .prose blockquote :global(.shiki) {
    @apply my-4;
  }

  .prose :global(.shiki code) {
    @apply flex flex-row whitespace-nowrap;
  }

  /** -- Line numbers. */

  .prose :global(.shiki .line-numbers) {
    @apply py-3 px-0 text-gray-200/30 text-right select-none;
  }

  .prose :global(.shiki .line-numbers .line-number) {
    @apply min-w-[1.5rem] px-4;
  }

  /** -- Lines. */

  .prose :global(.shiki .lines) {
    @apply grid w-full px-0 py-3 overflow-x-auto;
  }

  .prose :global(.shiki .line-numbers + .lines) {
    @apply px-0 py-3;
  }

  .prose :global(.shiki .lines .line) {
    @apply px-4 whitespace-pre;
  }

  .prose :global(.shiki .line-numbers + .lines .line) {
    @apply pl-0 pr-4;
  }

  /** -- Highlight. */

  .prose :global(.shiki :where(.lines, .line-numbers) :where(.highlight-invert)) {
    @apply opacity-[0.35];
  }

  .prose
    :global(.shiki
      :where(.lines, .line-numbers)
      :where(.highlight, .highlight-start, .highlight-inner, .highlight-end)) {
    @apply bg-[#434c5e58] opacity-100;
  }

  /** -- Language label. */

  .prose :global(.shiki .language-id) {
    @apply select-none py-2 px-4 rounded-none sm:rounded-tl-lg sm:rounded-tr-lg
    bg-[#202327] text-gray-300
    border-b border-solid border-gray-700;
  }

  .prose :global(blockquote .shiki) {
    @apply rounded-lg;
  }

  .prose :global(blockquote .shiki .language-id) {
    @apply rounded-tl-lg rounded-tr-lg;
  }

  /** Inline code. */

  .prose :global(:not(pre) > code) {
    @apply py-0.5 px-1 rounded-md border border-gray-400/25;
  }

  .prose :global(code::before),
  .prose :global(code::after) {
    content: '';
  }
</style>
