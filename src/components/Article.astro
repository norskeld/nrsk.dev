---
import { tw } from '@nrsk/tw'

import type { ArticleEntry } from '@/api/content'
import { toTagsWithURL } from '@/api/frontmatter'
import { readingTime } from '@/api/utils'
import { render } from '@/api/markdown'

import Content from './Content.astro'
import Tags from './Tags.astro'
import Date from './Date.astro'
import Dot from './Dot.astro'

export interface Props {
  item: ArticleEntry
}

const { body, data } = Astro.props.item

const content = await render(body)
const tags = toTagsWithURL('/articles/tag/', data.tags ?? [])

const articleClasses = tw`
  flex flex-col justify-center items-start gap-10 sm:gap-12
  w-full
`

const headingClasses = tw`
  text-2xl font-semibold
  text-black dark:text-white
`

const metaClasses = tw`
  flex flex-col gap-4 sm:gap-0 sm:flex-row w-full
  text-gray-500 dark:text-gray-400
`

const headerClasses = tw`
  flex flex-col gap-4
  w-full
`

const dotClasses = tw`
  hidden sm:block
`

const tagsBlockClasses = tw`
  flex
`
---

<article class={articleClasses}>
  <header class={headerClasses}>
    <h1 class={headingClasses}>
      {data.title}
    </h1>

    <div class={metaClasses}>
      <div>
        <Date date={data.createdAt} />
        <Dot />
        <span>{readingTime(body)}</span>
      </div>

      <div class={tagsBlockClasses}>
        <Dot class={dotClasses} />
        <Tags items={tags} />
      </div>
    </div>
  </header>

  <Content content={content} />
</article>
