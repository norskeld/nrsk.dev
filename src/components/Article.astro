---
import { getAllArticles, type ArticleEntry } from '@/api/content'

import { collectionsMap } from '@/content/config'

import Dropdown from './Dropdown.astro'
import Heading from './Heading.astro'
import TagList from './TagList.astro'
import Link from './Link.astro'
import Date from './Date.astro'
import Dot from './Dot.astro'

export interface Props {
  item: ArticleEntry
}

const { collection, data, render } = Astro.props.item

const { Content } = await render()

const tags = (data?.tags ?? []).map((tag) => ({
  tag,
  url: `/${collection}/tag/${tag}`
}))

const collectionInfo = collectionsMap[collection]

const seriesArticles = (await getAllArticles({ sort: 'asc' }))
  .filter((it) => it.collection === collection)

function isArticleActive(article: ArticleEntry): boolean {
  return `${collection}:${data.title}` === `${article.collection}:${article.data.title}`
}
---

<article class="flex flex-col justify-center items-start gap-10 sm:gap-12 w-full">
  <header class="flex flex-col gap-4 w-full">
    <Heading>
      {data.title}
    </Heading>

    <div
      class:list={[
        "flex flex-col gap-4 sm:gap-0 sm:flex-row w-full",
        "text-gray-500 dark:text-gray-400"
      ]}
    >
      <div class="flex">
        <Date created={data.createdAt} />

        {tags.length > 0 && (
          <Dot />

          <TagList items={tags} />
        )}
      </div>
    </div>
  </header>

  {collectionInfo.series && (
    <Dropdown>
      <p slot="summary">
        <Link to={`/#${collection}`}>{collectionInfo.name}</Link> series.
      </p>

      <ol
        slot="content"
        class:list={[
          "flex flex-col gap-2 list-inside list-[upper-roman]",
          "text-gray-500 dark:text-gray-400"
        ]}
      >
        {seriesArticles.map((article) => (
          <a
            href={`/${article.collection}/${article.slug}`}
            class:list={[
              isArticleActive(article)
                ? "text-black dark:text-white"
                : "text-gray-400 dark:text-gray-500"
            ]}
          >
            <li
              class:list={[
                "py-1 px-2 -my-1 -mx-2 rounded-md transition-colors",
                !isArticleActive(article) && "hover:text-gray-700 hover:dark:text-gray-300"
              ]}
            >
              {article.data.title}
            </li>
          </a>
        ))}
      </ol>
    </Dropdown>
  )}

  <section
    class:list={[
      "prose dark:prose-invert",
      "w-full max-w-none"
    ]}
  >
    <Content />
  </section>
</article>
