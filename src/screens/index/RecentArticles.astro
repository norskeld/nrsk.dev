---
import CardGrid from '@/components/CardGrid.astro'
import Header from '@/components/Header.astro'
import Link from '@/components/Link.astro'

import { loadArticles } from '@/api/articles'

import RecentArticlesCard from './RecentArticlesCard.astro'

export interface Props {
  amount: number
}

const recentArticles = await loadArticles({
  limit: Astro.props.amount,
  sort: 'desc'
})
---

<section class="articles">
  <Header>
    <h2 slot="heading" class="articles-heading">
      Recent articles
    </h2>

    <p slot="sub" class="articles-note">
      I occasionally write about <strong>Rust</strong>, <strong>functional programming</strong>,
      and <strong>front-end</strong> stuff.
    </p>
  </Header>

  <CardGrid>
    {recentArticles.map((article) => <RecentArticlesCard article={article} />)}
  </CardGrid>

  <footer>
    <Link to="/blog" class="articles-all-link">
      Read all articles <span class="articles-all-link-arrow">&srarr;</span>
    </Link>
  </footer>
</section>

<style>
.articles {
  @apply flex flex-col gap-8;
}

.articles-heading {
  @apply font-bold text-2xl md:text-4xl tracking-tight text-black;
}

:global(.dark .articles-heading) {
  @apply text-white;
}

.articles-note {
  @apply text-gray-700;
}

:global(.dark .articles-note) {
  @apply text-gray-300;
}

.articles-all-link {
  @apply !no-underline leading-7 text-gray-500 hover:text-gray-800 transition;
}

:global(.dark .articles-all-link) {
  @apply text-gray-400 hover:text-gray-200;
}

.articles-all-link-arrow {
  @apply font-semibold leading-7 transition-all;
}

.articles-all-link:hover .articles-all-link-arrow {
  @apply ml-1;
}
</style>
