---
import CardGrid from '@/components/CardGrid.astro'
import Header from '@/components/Header.astro'
import Link from '@/components/Link.astro'

import { loadArticles } from '@/api/articles'
import { tw } from '@/utils'

import RecentArticlesCard from './RecentArticlesCard.astro'

export interface Props {
  amount: number
}

const recentArticles = await loadArticles({
  limit: Astro.props.amount,
  sort: 'desc'
})

const sectionClasses = tw`flex flex-col gap-8`
const noteClasses = tw`text-gray-700 dark:text-gray-300`

const headingClasses = tw`
  text-2xl md:text-4xl font-bold tracking-tight
  text-black dark:text-white
`

const linkClasses = tw`
  group !no-underline leading-7 transition-[color]
  text-gray-500 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200
`

const linkArrowClasses = tw`
  font-semibold leading-7 transition-[margin-left]
  group-hover:ml-1
`
---

<section class={sectionClasses}>
  <Header>
    <h2 slot="heading" class={headingClasses}>
      Recent articles
    </h2>

    <p slot="sub" class={noteClasses}>
      I occasionally write about <strong>Rust</strong>, <strong>functional programming</strong>,
      and <strong>front-end</strong> stuff.
    </p>
  </Header>

  <CardGrid>
    {recentArticles.map((article) => <RecentArticlesCard article={article} />)}
  </CardGrid>

  <footer>
    <Link to="/blog" class={linkClasses}>
      Read all articles <span class={linkArrowClasses}>&srarr;</span>
    </Link>
  </footer>
</section>
